name: build docker image

# se déclenche à chaque push ou pullrequest sur main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13  # Utilise l'image Docker PostgreSQL version 13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: testdb  # Nom de la base de données
          POSTGRES_USER: testuser  # Nom de l'utilisateur
          POSTGRES_PASSWORD: testpassword  # Mot de passe de l'utilisateur
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Vérifier le code depuis le dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurer Java (si nécessaire pour construire l'application Spring Boot)
      - name: setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'  # Utilise la distribution AdoptOpenJDK/Temurin
          java-version: '17'

      # Construire l'application avec Maven
      - name: build with Maven
        run: mvn clean package

      # Se connecter à GitHub Packages Docker Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Construire l'image Docker
      - name: Build Docker Image
        run: docker build . -t ghcr.io/${{ github.repository_owner }}/your-image-name:latest

      # Pousser l'image vers GitHub Packages
      - name: Push Docker Image
        run: docker push ghcr.io/${{ github.repository_owner }}/your-image-name:latest